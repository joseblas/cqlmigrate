plugins {
    id 'java'
    id 'idea'
    id 'maven'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.6'
    id 'pl.allegro.tech.build.axion-release' version '1.3.4'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
    id "com.jfrog.artifactory" version "4.4.0"
}

scmVersion {
    tag {
        prefix = ''
    }
}

group = 'uk.sky'
version = '3.0.0'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

if (!project.hasProperty('openSourceRepoUser')) {
    ext.openSourceRepoUser = 'dummy'
}
if (!project.hasProperty('openSourceRepoPass')) {
    ext.openSourceRepoPass = 'dummy'
}

clean.doFirst {
    // Remove temporary directory for embedded Cassandra
    delete "${projectDir}/target"
}

//bintray {
//    user = project.property('openSourceRepoUser')
//    key = project.property('openSourceRepoPass')
//    publications = ['artifacts']
//    pkg {
//        userOrg = 'sky-uk'
//        repo = 'oss-maven'
//        name = project.name
//        licenses = ['BSD 3-Clause']
//        vcsUrl = 'https://github.com/sky-uk/cqlmigrate.git'
//        version {
//            name = scmVersion.version
//            released = new Date()
//            vcsTag = scmVersion.version
//        }
//    }
//}



subprojects {
    apply plugin: "java"

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    repositories {
        mavenCentral()
    }

    dependencies {
        compile 'com.datastax.cassandra:cassandra-driver-core:3.1.0'
        compile 'org.slf4j:slf4j-api:1.7.12'
        compile 'com.google.code.findbugs:jsr305:3.0.0'

        testCompile 'org.apache.logging.log4j:log4j-core:2.2'
        testCompile 'junit:junit:4.12'
        testCompile 'org.assertj:assertj-core:2.0.0'
        testCompile 'org.assertj:assertj-joda-time:2.0.0'
        testCompile 'joda-time:joda-time:2.9.4'
        testCompile 'org.hamcrest:hamcrest-all:1.3'
        testCompile 'org.mockito:mockito-core:1.10.19'
        testCompile 'org.powermock:powermock-api-mockito:1.6.5'
        testCompile 'org.powermock:powermock-module-junit4:1.6.5'

        testCompile 'org.scassandra:java-client:1.0.3'
        testCompile 'org.slf4j:slf4j-simple:1.7.12'
//    testCompileAndFunctional 'org.cassandraunit:cassandra-unit-shaded:2.1.9.2'
//        testCompileAndFunctional 'org.cassandraunit:cassandra-unit:3.0.0.1'

    }

    idea {
        module {
            downloadSources = true
        }
    }


    jar {
        manifest {
            attributes "Main-Class": "uk.sky.cqlmigrate.CqlMigratorImpl"
        }
    }

    task functional(dependsOn: ['testJar']) << {
        exec {
            executable = 'java'
            args = ['-jar', testJar.archivePath, 'migrateSchema']
        }
    }


    check.dependsOn(functional)

}



task wrapper(type: Wrapper) {
    gradleVersion = '2.11'
}

configurations {
    testCompileAndFunctional
    functional.extendsFrom testCompileAndFunctional
    testCompile.extendsFrom testCompileAndFunctional
}

//dependencies {
//    compile 'com.datastax.cassandra:cassandra-driver-core:3.1.0'
//    compile 'org.slf4j:slf4j-api:1.7.12'
//    compile 'com.google.code.findbugs:jsr305:3.0.0'
//
//    testCompile 'org.apache.logging.log4j:log4j-core:2.2'
//    testCompile 'junit:junit:4.12'
//    testCompile 'org.assertj:assertj-core:2.0.0'
//    testCompile 'org.assertj:assertj-joda-time:2.0.0'
//    testCompile 'joda-time:joda-time:2.9.4'
//    testCompile 'org.hamcrest:hamcrest-all:1.3'
//    testCompile 'org.mockito:mockito-core:1.10.19'
//    testCompile 'org.powermock:powermock-api-mockito:1.6.5'
//    testCompile 'org.powermock:powermock-module-junit4:1.6.5'
//
//    testCompile 'org.scassandra:java-client:1.0.3'

//    testCompileAndFunctional 'org.cassandraunit:cassandra-unit-shaded:2.1.9.2'
//    testCompileAndFunctional 'org.cassandraunit:cassandra-unit:3.0.0.1'
//    functional 'org.slf4j:slf4j-simple:1.7.12'
//}



task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task testJar(type: Jar) {
    classifier = 'tests'
    from(sourceSets.main.output, sourceSets.test.output)
    from {
        (configurations.runtime + configurations.functional).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    manifest {
        attributes 'Main-Class': 'uk.sky.cqlmigrate.example.CmdLineEntryPoint'
    }
}



// Functional test is to run the migrateSchema on a jar containing embedded CQL files and have it return successfully.
//task functional(dependsOn: ['testJar']) << {
//    exec {
//        executable = 'java'
//        args = ['-jar', testJar.archivePath, 'migrateSchema']
//    }
//}
//
//
//check.dependsOn(functional)

//test {
//    jvmArgs '-Dcassandra.storagedir=/tmp/cassandra'
//}

//artifactory {
//    contextUrl = 'http://repo.sns.sky.com:8081/artifactory'
//    //The base Artifactory URL if not overridden by the publisher/resolver
//    publish {
//        contextUrl = 'http://repo.sns.sky.com:8081/artifactory'   //The base Artifactory URL for the publisher
//        //A closure defining publishing information
//        repository {
//            repoKey = 'libs-releases-local'   //The Artifactory repository key to publish to
//            username = 'pipeline'          //The publisher user name
//            password = 'AP4wqWC3Ppdaf7WRkNrZZBhdMfT'       //The publisher password
//
//        }
//        defaults {
//            publications('artifacts')
//            publishArtifacts = true
//            // Properties to be attached to the published artifacts.
//            properties = ['qa.level': 'basic', 'dev.team': 'core']
//            publishPom = true // Publish generated POM files to Artifactory (true by default)
//            publishIvy = true // Publish generated Ivy descriptor files to Artifactory (true by default)
//        }
//    }
//    resolve {
//        contextUrl = 'http://repo.sns.sky.com:8081/artifactory'   //The base Artifactory URL for the resolver
//        repository {
//            repoKey = 'libs-releases-local'  //The Artifactory (preferably virtual) repository key to resolve from
//            username = 'pipeline'       //Optional resolver user name (leave out to use anonymous resolution)
//            password = 'AP4wqWC3Ppdaf7WRkNrZZBhdMfT'   //The resolver password
//            maven = true                //Resolve Maven-style artifacts and descriptors (true by default)
//        }
//    }
//    // Redefine basic properties of the build info object
//    clientConfig.setIncludeEnvVars(true)
//    clientConfig.info.addEnvironmentProperty('cassandra.storagedir', "/tmp/cassandra")
//    clientConfig.info.setBuildName('CqlMigrate to Artifactory')
//    clientConfig.info.setBuildNumber('' + new java.util.Random(System.currentTimeMillis()).nextInt(20000))
//    clientConfig.timeout = 600 // Artifactory connection timeout (in seconds). The default timeout is 300 seconds.
//}
//
//artifactoryPublish {
//    skip = false //Skip build info analysis and publishing (false by default)
//}